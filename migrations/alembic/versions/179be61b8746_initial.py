"""initial

Revision ID: 179be61b8746
Revises: 
Create Date: 2024-11-19 14:00:18.299613

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '179be61b8746'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tradingstrategy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('RANGE', 'BREAKOUT', 'TAKE_PROFIT', name='strategytype'), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('state', sa.Enum('INIT', 'ACTIVE', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELED', name='strategystate'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_checked_at', sa.DateTime(), nullable=False),
    sa.Column('check_interval', sa.Integer(), nullable=False),
    sa.Column('total_profit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('realized_profit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tax_reserve', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('available_profit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tradingstrategy_name'), 'tradingstrategy', ['name'], unique=False)
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('ACCEPTED', 'LIVE', 'CANCELLED', 'FILLED', 'PARTIAL_FILL', 'REJECTED', name='orderstate'), nullable=False),
    sa.Column('amount', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('side', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('order_type', sa.Enum('LIMIT_BUY', 'LIMIT_SELL', 'STOP_LIMIT_BUY', 'STOP_LIMIT_SELL', name='ordertype'), nullable=False),
    sa.Column('stop_price', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('parent_order_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_order_id'], ['order.order_id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['tradingstrategy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_index(op.f('ix_tradingstrategy_name'), table_name='tradingstrategy')
    op.drop_table('tradingstrategy')
    # ### end Alembic commands ###
